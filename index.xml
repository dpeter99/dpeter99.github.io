<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dpeter99</title><link>https://dpeter99.github.io/</link><description>Recent content on dpeter99</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 15 Jul 2021 14:35:43 +0000</lastBuildDate><atom:link href="https://dpeter99.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Forge 1.17 update</title><link>https://dpeter99.github.io/posts/forge_117/</link><pubDate>Thu, 15 Jul 2021 14:35:43 +0000</pubDate><guid>https://dpeter99.github.io/posts/forge_117/</guid><description>For anyone asking for 1.17 forge here is the rundown of the process that goes into updating it.
[!WARNING] NEW! Currently step 2 is done. The pathes for forge are ready and a version of forge is running on 1.17. Currently we are waiting on the final touches on the so called Big Peel.
The Big Peel This refers to a quite large rewiting of how the mods are loaded internally.</description></item><item><title>Broken SSD</title><link>https://dpeter99.github.io/posts/broken_ssd/</link><pubDate>Thu, 08 Jul 2021 09:00:59 +0000</pubDate><guid>https://dpeter99.github.io/posts/broken_ssd/</guid><description>Soo on 07.04 my SSD broke down. But it wasn&amp;rsquo;t an easy case of windows telling me that it went bad and I just got a new one.
The error I was using Windows just as any other day, and while leaving it to go eat, it broke. What I got back for was a normal Win logon screen but the background was just green (my accent color in windows).</description></item><item><title>Arcane Rituals</title><link>https://dpeter99.github.io/projects/arcane_rituals/</link><pubDate>Wed, 07 Jul 2021 20:16:46 +0000</pubDate><guid>https://dpeter99.github.io/projects/arcane_rituals/</guid><description>Arcane Rituals is my Minecraft mod made using Forge.
Origins The origins of this mod and the basic idea for it is really old. I started it first as a vanilla data pack but i got upset with the lack of custom block models. So the first thing i tried to do was to somehow make blocks be able to get custom models. This was the original reason I started looking into how modding works.</description></item><item><title>Scraperlib</title><link>https://dpeter99.github.io/projects/scraperlib/scraperlib/</link><pubDate>Wed, 07 Jul 2021 22:11:32 +0200</pubDate><guid>https://dpeter99.github.io/projects/scraperlib/scraperlib/</guid><description>Scarper lib is a small Kotlin library that can extract recipe (food recipe) data from a few common websites. It was built as part of Grocery a recipe collecting Android app that I made for a Uni homework.
The library currently supports:
Allrecipes Delish Mindmegette Nosalty Tasty</description></item><item><title>SharpPok</title><link>https://dpeter99.github.io/projects/sharp_pok/sharp_pok/</link><pubDate>Wed, 07 Jul 2021 22:07:55 +0200</pubDate><guid>https://dpeter99.github.io/projects/sharp_pok/sharp_pok/</guid><description>Sharp pok is a c# implementation of the Pok package manager protocol. Pok is not yet fully specked out, what this implements is a draft.
The goal The goal of Pok and so SharpPok is to provide an easy to use package manager where the client has to do little work. With this it should allow easy implementation of even hobby OSs like Chroma</description></item><item><title>ACFT</title><link>https://dpeter99.github.io/projects/actf/</link><pubDate>Wed, 07 Jul 2021 21:55:51 +0200</pubDate><guid>https://dpeter99.github.io/projects/actf/</guid><description>This project is discontinued
Currently I only use this site for a short text that describes the status of forge update to the newer version.
The origin This was a plan for a community made Forge modding tutorial. While it was a good idea many of the write-ups for it ended up in Forge Community Wiki What that project provides over this is the ease of editing for anybody who wants to.</description></item><item><title>Necs</title><link>https://dpeter99.github.io/projects/necs/</link><pubDate>Wed, 07 Jul 2021 21:04:16 +0200</pubDate><guid>https://dpeter99.github.io/projects/necs/</guid><description>Not an Entity Component System This is a small project where I try to make a ECS for Unity that supports in editor authoring of the data. What this provides compared to Unity&amp;rsquo;s ECS is that you are not forced to use the complicated and confusing conversion system.
What this is not This is not a Production ready project not do I plan on making it so This is not supposed to be faster than Unity&amp;rsquo;s ECS What this is This is an experiment to see if I can make it This is for learning Current state Currently there is a Entity / Component allocator that seems to work.</description></item><item><title>Personal website</title><link>https://dpeter99.github.io/projects/personal_website/</link><pubDate>Wed, 07 Jul 2021 13:10:53 +0200</pubDate><guid>https://dpeter99.github.io/projects/personal_website/</guid><description>As in this website. ðŸ˜€
The site is automatically built form the source files hosted on github, and published to the gh-pages branch. I&amp;rsquo;m using GH pages for the hosting.
The setup This site uses Hugo to build the static files that get served. This means that all of the pages get generated from .md files. This makes adding and changeling content really easy, no need to touch html files. Adding a new project or post is as simple as adding a new .</description></item><item><title>Shadow Engine</title><link>https://dpeter99.github.io/projects/shadow-engine/</link><pubDate>Tue, 06 Jul 2021 16:06:26 +0000</pubDate><guid>https://dpeter99.github.io/projects/shadow-engine/</guid><description>Shadow Engine is my hobby game engine i have been working on for for quite a while now.
History The engine started off as a cpp rewrite of my 2D game engine RelicEngine made in C, but this scope was quickly outgrown. Both engines were started for University Homeworks, as we usually get the option of miking something big as a proof that we understood the language. But as I started working on Shadow Engine the scope expanded quite fast.</description></item><item><title>Cookie Clicker</title><link>https://dpeter99.github.io/projects/cookie_clicker_java/</link><pubDate>Tue, 03 Dec 2019 23:23:13 +0200</pubDate><guid>https://dpeter99.github.io/projects/cookie_clicker_java/</guid><description>This colone of the poppular idle game Cookie clicker was make in less than 3 days for a University assignment. It uses a modular structure and should be faery easy to implement the rest of the game.
Structure It uses a registry system inspired by how Minecraft operates. It also uses a separate thread for the counting of the cookies as that was a requirement for the assignment.</description></item><item><title>Tile_map</title><link>https://dpeter99.github.io/projects/tile_map/tile_map/</link><pubDate>Thu, 02 Feb 2017 23:32:27 +0200</pubDate><guid>https://dpeter99.github.io/projects/tile_map/tile_map/</guid><description>TileMap&amp;rsquo;s idea was started before Unity had an official Tile map integrated into the engine. That implementation came out while I was making this. And while i did work on it after that, the inspiration died out soon after. This was also one of the few larger projects that I worked on.
How it works The base idea of the system is to split the map into chunks. For each of these chunk than we construct a mesh that we can manually submit for unity to draw.</description></item></channel></rss>